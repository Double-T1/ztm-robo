{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","username","email","id","className","alt","src","CardList","robots","StrictMode","map","user","index","Scroll","props","children","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","res","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kPAeeA,EAbF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAClC,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKH,IACL,4BAAIC,IACJ,4BAAIC,WCWLK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,cAAC,IAAMC,WAAP,UAEQD,EAAOE,KAAI,SAACC,EAAMC,GACd,OAAQ,cAAC,EAAD,CACJZ,KAAMQ,EAAOI,GAAOZ,KACpBC,SAAUO,EAAOI,GAAOX,SACxBC,MAAOM,EAAOI,GAAOV,MACrBC,GAAIK,EAAOI,GAAOT,IAJHS,SCIxBC,G,MATA,SAACC,GACZ,OAEI,aADA,CACA,OAAKX,GAAG,SAAR,SACKW,EAAMC,aCSJC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKb,UAAU,SAAf,SACI,uBACIA,UAAU,mCACVc,KAAK,SACLC,YAAY,0BACZC,SAAYH,OCebI,G,wDArBX,aAAe,IAAD,8BACV,gBACKC,MAAO,CACRC,UAAU,GAHJ,E,qDAOd,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAKG,KAAKJ,MAAMC,SAIZ,2DAHOG,KAAKZ,MAAMC,a,GAdFa,cCoDbC,E,kDA7CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKZ,MAAQ,CACTd,OAAQ,GACRwB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEnB,OAAO+B,S,oBAS9C,WACI,MAA8Bb,KAAKJ,MAA5Bd,EAAP,EAAOA,OAAQwB,EAAf,EAAeA,YACTQ,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,oBAAoBC,SAASZ,EAAYW,wBAG/D,OAAQnC,EAAOqC,OAGX,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQgC,WAPlC,oBAAIpC,UAAU,aAAd,yB,GA5BUwB,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e83d4cdf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, username, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='pokemon' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{username}</p>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <React.StrictMode>\r\n            {\r\n                robots.map((user, index) => {\r\n                    return (<Card key={index} \r\n                        name={robots[index].name} \r\n                        username={robots[index].username}\r\n                        email={robots[index].email} \r\n                        id={robots[index].id}/>\r\n                    )\r\n                })\r\n            }\r\n        </React.StrictMode>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\nimport './Scroll.css'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        // first {} is for json, second {} is an object for a css style\r\n        <div id='scroll'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2 tc\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type='search' \r\n                placeholder=\"search your robofriends\"\r\n                onChange = {searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state= {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.hasError) {\r\n            return this.props.children\r\n        }\r\n        return (\r\n            <h1>OOOps. There is an error.</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from './robots';\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport ErrorBoundary from './ErrorBoundary.js';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(res => res.json() )\r\n            .then(users => this.setState({ robots:users}) )\r\n    }\r\n\r\n\r\n\r\n    onSearchChange = (event) => {        \r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=> {\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\r\n        })\r\n        \r\n        return !robots.length ? \r\n        <h1 className='tc f1 code'>Loading</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n\r\n            \r\n        )\r\n    }\r\n    \r\n} \r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card.js';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import {robots} from './robots'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}